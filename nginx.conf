user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;
events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

	# 백엔드 upstream 설정
    upstream fastapi {
        server fastapi:8000;
    }

	# 프론트엔드 upstream 설정
    upstream frontend {
        server frontend:3000;
    }

    
    
    client_body_buffer_size 4k;   #클라이언트 요청의 버퍼 사이즈
    #client_body_temp_path /var/nginx/client_temp;

    server {
        listen 80;
        location /docks {
            proxy_pass   http://fastapi/docs;
            proxy_buffers  64 4K;
            proxy_request_buffering on;
        }

		# /api 경로로 오는 요청을 백엔드 upstream 의 /api 경로로 포워딩
        location /api {
            proxy_pass   http://fastapi;
            proxy_buffers  64 4K;
            proxy_request_buffering on;
        }

		# / 경로로 오는 요청을 프론트엔드 upstream 의 / 경로로 포워딩
        location / {
            # 프록시 설정 백엔드의 응답 당담.
            proxy_pass         http://frontend/;
        }
    }
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;
    include /etc/nginx/conf.d/*.conf;
}