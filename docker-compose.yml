version: "3.9"

services:
  fastapi:
    container_name: backend-livinglab
    build:
      context: ./APIs
      dockerfile : Dockerfile
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - 8005:8000 #HOST_PORT:CONTAINER_PORT -> Networked service-to-service는 CONTAINER_PORT를 사용한다.
    volumes:
      - /home/data/LivingLab/backend/Sample_images:/code/app/Sample_images
      - /home/data/LivingLab/backend/Uploaded_images:/code/app/Uploaded_images
      - /home/data/LivingLab/backend/ML:/code/app/ML/outside 
      - ./APIs:/code/app
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
    networks:
      - appnet
    
            


  frontend:
    build: 
      context: ./frontend
      dockerfile : Dockerfile
    container_name: frontend-livinglab
    command: sh -c "yarn start"
    ports:
      - 3000:3000
    working_dir: /code/living-front
    volumes:
      - ./frontend:/code

  
  db:
    # We use a mariadb image which supports both amd64 & arm64 architecture
    #image: mariadb:10.6.4-focal
    # If you really want to use MySQL, uncomment the following line
    image: mysql:8.0.19
    container_name: livinglab-db
    networks:
      - appnet
    environment:
      - MYSQL_DATABASE=plantLab
      - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/db-password

    secrets:
      - db-password
    command: --init-file /db-data/init.sql
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "--silent"]
      interval: 3s
      retries: 5
      start_period: 30s
    volumes:
      - /home/data/LivingLab/db/init.sql:/db-data/init.sql
      - /home/data/LivingLab/db:/db-data
networks:
  appnet:
    driver: bridge
secrets:
  db-password:
    file: /home/data/LivingLab/db/password.txt
  

